{"mappings":"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","sources":["src/index.js","src/js/filter.js","src/js/onSearch.js"],"sourcesContent":["import getRefs from './js/get-refs';\nimport openMovieDetails from './js/movie-details-open';\nimport footerModal from './js/footer-modal-open';\nimport { moviesApi, customPagination } from './js/gallery/';\nimport './js/nightMode';\nimport topUp from './js/top.js';\nimport './js/filter';\n\nimport { spinnerOn } from './js/loader';\nimport onSearch from './js/onSearch';\nimport checkAuth from './js/auth';\n// import renderPagination from './js/pagination';\n\nimport userAuth from './js/auth';\n\nconst refs = getRefs();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  moviesApi.currentFetch = moviesApi.fetchTrendWeekMovies;\n  customPagination.moveToPage(moviesApi.currentPage);\n});\n\n// ------------ OPEN MOVIE MODAL --------------------\n\nrefs.imagesContainer.addEventListener('click', onMovieCardClick);\nasync function onMovieCardClick(e) {\n  if (e.target.classList.contains('gallery__img')) {\n    e.preventDefault();\n    const movieId = e.target.dataset.movieId;\n    await openMovieDetails(moviesApi.fetchMovieByID(movieId));\n    const authButtons = document.querySelectorAll('.auth-required')\n   \n    checkAuth(authButtons)\n  }\n}\n// ---------- OPEN MOVIE MODAL END -------------------\n\nfooterModal();\n\n// async function fetchTrendMovies() {\n//   try {\n//     const { results, total_results, page } =\n//       await moviesApi.fetchTrendWeekMovies();\n\n//     results.length &&\n//       refs.imagesContainer.insertAdjacentHTML(\n//         'afterbegin',\n//         results.map(createMarkupElement).join('')\n//       );\n\n//     // pagination\n//     // const instance = createPagination();\n//     // instance.setItemsPerPage(20);\n//     // instance.setTotalItems(total_results);\n//     // instance.movePageTo(page);\n\n//     // instance.on('afterMove', event => {\n//     //   const currentPage = event.page;\n//     //   window.scrollTo({ top: 240, behavior: 'smooth' });\n//     // });\n\n//     // results.length &&\n//     //   refs.imagesContainer.insertAdjacentHTML(\n//     //     'afterbegin',\n//     //     results.map(createMarkupElement).join('')\n//     //   );\n\n\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nrefs.searchForm.addEventListener('submit', onSearch);\ntopUp();\n","import { moviesApi, customPagination } from './gallery';\n\nimport getRefs from './get-refs';\n\nconst refs = getRefs();\n\n// set genres\nlet selectedGenre = [];\nlet selectedGenreName = [];\nsetGenre();\n\nasync function setGenre() {\n  try {\n    const genre = await moviesApi.getAllGenres();\n\n    genre.forEach(genre => {\n      const elem = document.createElement('li');\n      elem.classList.add('filter__genre-item');\n      elem.id = genre.id;\n      elem.innerText = genre.name;\n      elem.addEventListener('click', () => {\n        if (selectedGenre.length === 0) {\n          selectedGenre.push(genre.id);\n          selectedGenreName.push(genre.name);\n        } else {\n          if (selectedGenre.includes(genre.id)) {\n            selectedGenre.forEach((id, index) => {\n              if (id === genre.id) {\n                selectedGenre.splice(index, 1);\n                selectedGenreName.splice(index, 1);\n              }\n            });\n          } else {\n            selectedGenre.push(genre.id);\n            selectedGenreName.push(genre.name);\n          }\n        }\n\n        refs.searchInput.value = '';\n        moviesApi.currentPage = 1;\n        moviesApi.genres = selectedGenre;\n        moviesApi.currentFetch = moviesApi.fetchMovieByGenres;\n        customPagination.moveToPage(moviesApi.currentPage);\n\n        highlightSelection();\n        updateFilterSelectBtn();\n      });\n      refs.filterGenreList.append(elem);\n    });\n  } catch (error) {}\n}\n\n// highlight selected genre\nfunction highlightSelection() {\n  const genres = document.querySelectorAll('.filter__genre-item');\n  genres.forEach(genre => {\n    genre.classList.remove('filter__genre-item--highlight');\n  });\n  if (selectedGenre.length !== 0) {\n    refs.filterClear.classList.remove('filter--hidden');\n    selectedGenre.forEach(id => {\n      const filterHighlightedGenre = document.getElementById(id);\n      filterHighlightedGenre.classList.add('filter__genre-item--highlight');\n    });\n  } else {\n    refs.filterClear.classList.add('filter--hidden');\n    fetchTrendMovies();\n  }\n}\n\n// clear filter\nrefs.filterClear.addEventListener('click', onFilterClearBtn);\n\nfunction onFilterClearBtn() {\n  clearFilter();\n  fetchTrendMovies();\n}\n\nexport function clearFilter() {\n  if (selectedGenre.length !== 0) {\n    selectedGenre.forEach(id => {\n      const filterHighlightedGenre = document.getElementById(id);\n      filterHighlightedGenre.classList.remove('filter__genre-item--highlight');\n    });\n  }\n  selectedGenre = [];\n  selectedGenreName = [];\n  refs.filterClear.classList.add('filter--hidden');\n  refs.filterSelectBtn.innerHTML = 'Select genre';\n}\n\n// custom select\nrefs.filterSelectBtn.addEventListener('click', onFilterSelectBtn);\n\nfunction onFilterSelectBtn() {\n  refs.filterWrap.classList.toggle('filter--active');\n}\n\nfunction updateFilterSelectBtn() {\n  if (selectedGenreName.length === 0) {\n    refs.filterSelectBtn.innerHTML = 'Select genre';\n    return;\n  }\n  if (selectedGenreName.length === 1) {\n    refs.filterSelectBtn.innerHTML = selectedGenreName[0];\n    return;\n  }\n  if (selectedGenreName.length > 1) {\n    refs.filterSelectBtn.innerHTML = selectedGenreName[0] + '...';\n    return;\n  }\n}\n\n// fetch trend movies\n\nfunction fetchTrendMovies() {\n  moviesApi.currentPage = 1;\n  moviesApi.currentFetch = moviesApi.fetchTrendWeekMovies;\n  customPagination.moveToPage(moviesApi.currentPage);\n}\n\n// hide genre list by clicking outside\ndocument.onclick = function closeList(e) {\n  if (!refs.filterWrap.contains(e.target)) {\n    refs.filterWrap.classList.remove('filter--active');\n  }\n};\n","import getRefs from './get-refs';\nimport { moviesApi, customPagination } from './gallery';\nimport { clearFilter } from './filter';\n\nconst refs = getRefs();\n\nexport default function onSearch(e) {\n  e.preventDefault();\n  clearFilter();\n\n  moviesApi.query = refs.searchInput.value;\n  moviesApi.currentFetch = moviesApi.fetchMovieQuery;\n  customPagination.moveToPage(moviesApi.currentPage);\n}\n"],"names":["$lpPzL","parcelRequire","$2sqY3","$cc8167df025acb14$var$refs","default","$cc8167df025acb14$var$selectedGenre","$cc8167df025acb14$var$selectedGenreName","$cc8167df025acb14$export$77cedf2a856f1597","length","forEach","id","document","getElementById","classList","remove","filterClear","add","filterSelectBtn","innerHTML","$cc8167df025acb14$var$fetchTrendMovies","moviesApi","currentPage","currentFetch","fetchTrendWeekMovies","customPagination","moveToPage","async","getAllGenres","genre","elem","createElement","innerText","name","addEventListener","push","includes","index","splice","searchInput","value","genres","fetchMovieByGenres","querySelectorAll","$cc8167df025acb14$var$updateFilterSelectBtn","filterGenreList","append","error","$cc8167df025acb14$var$setGenre","filterWrap","toggle","onclick","e","contains","target","$94b99a53ef2767b6$var$refs","$1f0dc3b9307be026$var$refs","imagesContainer","preventDefault","movieId","dataset","$E9a0y","fetchMovieByID","authButtons","$bMZn5","$93cIg","searchForm","query","fetchMovieQuery","$6mLAN"],"version":3,"file":"index.97a7dc77.js.map"}